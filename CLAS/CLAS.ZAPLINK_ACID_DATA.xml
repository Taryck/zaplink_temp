<?xml version="1.0" encoding="utf-16"?>
<ZL_OBJECT CHECKSUM="75B8BF3B842391DEB95C432334B4259F" CODE_SIGNATURE="9D6E174BC110D7A35E5F4766707055D5" CONNECTOR="39AC0A4B07A5A05AE1000000AC120173" NAME="ZAPLINK_ACID_DATA" TYPE="CLAS" VERSION="1.01">
 <DIRECTORY DEVCLASS="ZAPLINK-CONNECTORS-MAIN" MASTERLANG="E"/>
 <RAW>
  <A0_MAINDATA VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" CLSCCINCL="X" FIXPT="X" UNICODE="X">
   <INHERITANCE REFCLSNAME="ZAPLINK_CHECKPOINTS_DATA" STATE="1"/>
   <TEXTS>
    <ITEM LANG="E" TEXT="Data for Check Point Group">U1&amp;FUNCTIONALITY&amp;
ASIs part of connector : ZAPLINK_FUNCTION_GROUP
ASDefine XML structure of a Function group
U1&amp;RELATIONS&amp;
AS
U1&amp;EXAMPLE&amp;
AS
U1&amp;HINTS&amp;
AS
U1&amp;FURTHER_SOURCES_OF_INF&amp;
AS
U1Memories
ASThis application is dedicated to the memories of :
B2My father : Lamri BENSIALI (1940-2004) without whom I never started
  programming
B2My uncle : Jacky BEDU (1934-2009) who died during the completion of this
  application</ITEM>
   </TEXTS>
  </A0_MAINDATA>
  <ATTRIBUTS>
   <ITEM CMPNAME="A0_MAINDATA" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TS_MAINDATA">
    <TEXTS>
     <ITEM LANG="E" TEXT="Program main data"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="DESCRIPTIONS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TT_LTEXTS">
    <TEXTS>
     <ITEM LANG="E" TEXT="Description texts"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="GLOBAL_SETTINGS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TS_ACTIVATION"/>
   <ITEM CMPNAME="SETTINGS_FOR_SERVERS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TT_SERVERS"/>
   <ITEM CMPNAME="SETTINGS_FOR_USERS" EXPOSURE="1" STATE="1" TYPTYPE="1" TYPE="TT_USERS"/>
  </ATTRIBUTS>
  <FRIENDS>
   <ITEM REFCLSNAME="ZAPLINK_CHECKPOINTS" STATE="1"/>
   <ITEM REFCLSNAME="ZAPLINK_EASYXML" STATE="1"/>
  </FRIENDS>
  <LOCAL>
   <TYPES>`
*&quot;* USE THIS SOURCE FILE FOR ANY TYPE DECLARATIONS (CLASS
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</TYPES>
   <IMPLEMENTATIONS>`
*&quot;* LOCAL CLASS IMPLEMENTATION FOR PUBLIC CLASS
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</IMPLEMENTATIONS>
   <MACROS>`
*&quot;* USE THIS SOURCE FILE FOR ANY MACRO DEFINITIONS YOU NEED
*&quot;* in the implementation part of the class</MACROS>
  </LOCAL>
  <METHODS>
   <ITEM CMPNAME="ANONYMIZE" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Anonymized component data"/>
    </TEXTS>
    <SOURCE>`
  CLEAR: a0_maindata-create_user,  a0_maindata-create_date.
*ACT_USER
*ACT_DATE
*ACT_TIME</SOURCE>
   </ITEM>
   <ITEM CMPNAME="FROM_DATA" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert FM Data to object attributes"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="FM_DATA" CMPTYPE="1" PARPASSTYP="1" TYPTYPE="1" TYPE="TS_FM_DATA">
      <TEXTS>
       <ITEM LANG="E" TEXT="Function Modules object Data"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_user     LIKE LINE OF settings_for_users.
  DATA s_server   LIKE LINE OF settings_for_servers.
  DATA s_desc     LIKE LINE OF descriptions.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF fm_data-descriptions,
    &lt;m&gt; LIKE LINE OF fm_data-modes.

*  a0_maindata = fm_data-header.
*  CLEAR: a0_maindata-devclass_txt, a0_maindata-masterlang_txt, a0_maindata-component_txt.
  LOOP AT fm_data-descriptions ASSIGNING &lt;d&gt;.
    CLEAR s_desc.   s_desc-lang = &lt;d&gt;-langu.     s_desc-text = &lt;d&gt;-descript.   INSERT s_desc INTO TABLE descriptions.
  ENDLOOP.

*ACT_USERS_INFO
*ACT_SERVERS_INFO
  LOOP AT fm_data-modes ASSIGNING &lt;m&gt;.
    IF NOT &lt;m&gt;-username IS INITIAL.
      CLEAR s_user.   s_user-user = &lt;m&gt;-username.   s_user-activation = conv_mode2activation( &lt;m&gt;-actmode ).
      INSERT s_user INTO TABLE settings_for_users.
    ELSEIF NOT &lt;m&gt;-server IS INITIAL.
      CLEAR s_server.   s_server-server = &lt;m&gt;-server.   s_server-activation = conv_mode2activation( &lt;m&gt;-actmode ).
      INSERT s_server INTO TABLE settings_for_servers.
    ELSEIF NOT &lt;m&gt;-actdefault IS INITIAL OR global_settings IS INITIAL.
      global_settings = conv_mode2activation( &lt;m&gt;-actmode ).
    ENDIF.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="TO_DATA" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="Convert object attributes to FM Data"/>
    </TEXTS>
    <PARAMETERS>
     <ITEM SCONAME="FM_DATA" CMPTYPE="1" PARDECLTYP="3" TYPTYPE="1" TYPE="TS_FM_DATA">
      <TEXTS>
       <ITEM LANG="E" TEXT="Function Modules object Data"/>
      </TEXTS>
     </ITEM>
    </PARAMETERS>
    <SOURCE>`
  DATA s_mode     LIKE LINE OF fm_data-modes.
  DATA s_server   LIKE LINE OF settings_for_servers.
  DATA s_desc     LIKE LINE OF fm_data-descriptions.
  FIELD-SYMBOLS:
    &lt;d&gt; LIKE LINE OF descriptions,
    &lt;s&gt; LIKE LINE OF settings_for_servers,
    &lt;u&gt; LIKE LINE OF settings_for_users.

  LOOP AT descriptions ASSIGNING &lt;d&gt;.
    CLEAR s_desc.   s_desc-langu = &lt;d&gt;-lang.     s_desc-descript = &lt;d&gt;-text.   INSERT s_desc INTO TABLE fm_data-descriptions.
  ENDLOOP.

  s_mode-actmode = conv_activation2mode( global_settings ).     s_mode-actdefault = abap_true.
  INSERT s_mode INTO TABLE fm_data-modes.
*ACT_USERS_INFO
  LOOP AT settings_for_users ASSIGNING &lt;u&gt;.
    CLEAR s_mode.     s_mode-username = &lt;u&gt;-user.   s_mode-actmode = conv_activation2mode( &lt;u&gt;-activation ).
    INSERT s_mode INTO TABLE fm_data-modes.
  ENDLOOP.

*ACT_SERVERS_INFO
  LOOP AT settings_for_servers ASSIGNING &lt;s&gt;.
    CLEAR s_mode.     s_mode-server = &lt;s&gt;-server.   s_mode-actmode = conv_activation2mode( &lt;s&gt;-activation ).
    INSERT s_mode INTO TABLE fm_data-modes.
  ENDLOOP.</SOURCE>
   </ITEM>
   <ITEM CMPNAME="UNANONYMIZE" EXPOSURE="1" STATE="1">
    <TEXTS>
     <ITEM LANG="E" TEXT="UnAnonymized component data"/>
    </TEXTS>
   </ITEM>
  </METHODS>
  <TYPEGROUPS>
   <ITEM TYPEGROUP="ABAP" IMPLICIT="X"/>
  </TYPEGROUPS>
  <TYPES>
   <ITEM CMPNAME="TS_4SERVER" EXPOSURE="1" STATE="1" EDITORDER="5 " TYPTYPE="4">
    BEGIN OF ts_4server,
      server  TYPE aab_id_act-server.
  INCLUDE TYPE ts_activation as activation.
  TYPES:
    END OF ts_4server
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Activation checkbox for a user"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_4USER" EXPOSURE="1" STATE="1" EDITORDER="3 " TYPTYPE="4">
    BEGIN OF ts_4user,
      user    TYPE aab_id_act-username.
  INCLUDE TYPE ts_activation as activation.
  TYPES:
    END OF ts_4user
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Activation checkbox for a server"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_FM_DATA" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4">
    BEGIN OF ts_fm_data,
      header          TYPE aab_id_prop,     &quot; aab_id_sfields,
      descriptions    TYPE STANDARD TABLE OF aab_id_propt WITH DEFAULT KEY,
      modes           TYPE aab_id_act_tab,
    END OF ts_fm_data
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Function Module Data"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TS_MAINDATA" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4">
    BEGIN OF ts_maindata.
  INCLUDE TYPE aab_id_sfields.
  TYPES:
    END OF ts_maindata
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Function Module main data"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_SERVERS" EXPOSURE="1" STATE="1" EDITORDER="6 " TYPTYPE="4">
    tt_servers TYPE SORTED TABLE OF ts_4server WITH UNIQUE KEY server
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Activation checkbox for servers"/>
    </TEXTS>
   </ITEM>
   <ITEM CMPNAME="TT_USERS" EXPOSURE="1" STATE="1" EDITORDER="4 " TYPTYPE="4">
    tt_users TYPE SORTED TABLE OF ts_4user WITH UNIQUE KEY user
`
    <TEXTS>
     <ITEM LANG="E" TEXT="Activation checkbox for users"/>
    </TEXTS>
   </ITEM>
  </TYPES>
 </RAW>
</ZL_OBJECT>
